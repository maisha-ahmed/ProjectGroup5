<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="20" total="141" passed="121" failed="0" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report DirectoryC:\Users\maish\Desktop\Demo\Group5\NYMag\target\surefire-reports\html]]>
    </line>
    <line>
      <![CDATA[HomepageTest: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[HomepageTest: grub Street Tab]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: click On Grub Street Tab]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: get Grub Street Web Element]]>
    </line>
    <line>
      <![CDATA[HomepageTest: intelligencer Tabs]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: click On Intelligencer Tab]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: get Intelligencer Web Element]]>
    </line>
    <line>
      <![CDATA[HomepageTest: strategist Tab]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: click On Strategist Tab]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: get Strategist Web Element]]>
    </line>
    <line>
      <![CDATA[HomepageTest: the Cut Tabs]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: click On The Cut Tab]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: get The Cut Web Element]]>
    </line>
    <line>
      <![CDATA[HomepageTest: vulture Tabs]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: click On Vulture Tab]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: get Vulture Web Element]]>
    </line>
    <line>
      <![CDATA[HomepageTest2: burger Icon Hover]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: hover On Burger Icon]]>
    </line>
    <line>
      <![CDATA[HomepageTest2: grub Street Hover]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: hover On Grub Street Tab]]>
    </line>
    <line>
      <![CDATA[HomepageTest2: intelligencer Hover]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: hover On Intelligencer Tab]]>
    </line>
    <line>
      <![CDATA[HomepageTest2: strategist Hover]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: hover On Strategist Tab]]>
    </line>
    <line>
      <![CDATA[HomepageTest2: the Cut Hover]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: hover On The Cut Tab]]>
    </line>
    <line>
      <![CDATA[HomepageTest2: vulture Hover]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: hover On Vulture Tab]]>
    </line>
    <line>
      <![CDATA[SignUpTest: test That Subscribe Btn Works]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: click On Subscribe Btn]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Click On Subscribe Btn]]>
    </line>
    <line>
      <![CDATA[SignUpTest: test That User Can Sign In With Valid Credentials]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: click On User Sign In Btn]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Click On User Sign In Btn]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: type Email Name]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Enter Email Web Element]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: type User Password]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Enter Password]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: click On Sign In Btn]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Click On Sign In Btn Web Element]]>
    </line>
    <line>
      <![CDATA[SignUpTest: test That User Cannot Sign In With Invalid Credentials]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: click On User Sign In Btn]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Click On User Sign In Btn]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: type Email Name]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Enter Email Web Element]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: type User Password]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Enter Password]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: click On Sign In Btn]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Click On Sign In Btn Web Element]]>
    </line>
    <line>
      <![CDATA[SignUpTest: test That User Cannot Sign In Without Email]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: click On User Sign In Btn]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Click On User Sign In Btn]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: type User Password]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Enter Password]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: click On Sign In Btn]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Click On Sign In Btn Web Element]]>
    </line>
    <line>
      <![CDATA[SignUpTest: test That User Cannot Sign In Without Password]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: click On User Sign In Btn]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Click On User Sign In Btn]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: type Email Name]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Enter Email Web Element]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: click On Sign In Btn]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Click On Sign In Btn Web Element]]>
    </line>
    <line>
      <![CDATA[SignUpTest: test That You Can Sign Up With Valid Email]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: type Email Name]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Enter Email Web Element]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: click On Submit]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Click On Submit Btn Web Element]]>
    </line>
    <line>
      <![CDATA[SignUpTest: test That You Cannot Sign Up With An Invalid Email]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: type Email Name]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Enter Email Web Element]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: click On Submit]]>
    </line>
    <line>
      <![CDATA[NYMagSignUp: get Click On Submit Btn Web Element]]>
    </line>
    <line>
      <![CDATA[DropDownMenuTest: test Click On Business]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Business]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenuTest: test Click On Ideas]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Ideas]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenuTest: test Click On Intelligencer]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Intelligencer]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenuTest: test Click On Politics]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Politics]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenuTest: test Click On Technology]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Technology]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenuTest: test Get Text From Drop Down Menu]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Text Drop Down]]>
    </line>
    <line>
      <![CDATA[DropDownMenuTest: test That Search Bar Works]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: type In Search Bar]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Search Bar Web Element]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Search]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Click On Search]]>
    </line>
    <line>
      <![CDATA[DropDownMenuTest: test That You Can Clear Search Bar]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: type In Search Bar]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Search Bar Web Element]]>
    </line>
    <line>
      <![CDATA[DropDownMenuTest: test That You Cannot Search With Empty Field]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: type In Search Bar]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Search Bar Web Element]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Search]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Click On Search]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Art]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Art]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Books]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Books]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Comedy]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Comedy]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Culture]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Culture]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Design Hunting]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Design Hunting]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Electronics]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Electronics]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Fitness]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Fitness]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Kids]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Kids]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Movies]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Movies]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Music]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Music]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Power]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Power]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Self]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Self]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Stream]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Stream]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Style]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Style]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On TV]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On TV]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Theater]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Theater]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Travel]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Travel]]>
    </line>
    <line>
      <![CDATA[TestDropDown: test Click On Weddings]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Weddings]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On Beauty]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Beauty]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On Culture]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Culture]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On Design Hunting]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Design Hunting]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On Dining]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Dining]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On Electronics]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Electronics]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On Fashion]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Fashion]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On Fitness]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Fitness]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On Gift Guides]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Gift Guides]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On Home]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Home]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On Kids]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Kids]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On Power]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Power]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On Restaurants And Bars]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Restaurants And Bars]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On Sales]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Sales]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On TV]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On TV]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On Thousand Best]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Thousand Best]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On Travel]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Travel]]>
    </line>
    <line>
      <![CDATA[TestDropDown2: test Click On Weddings]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Weddings]]>
    </line>
    <line>
      <![CDATA[TestDropDown3: test Click On About]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On About]]>
    </line>
    <line>
      <![CDATA[TestDropDown3: test Click On Best Doctors]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Best Doctors]]>
    </line>
    <line>
      <![CDATA[TestDropDown3: test Click On Best Of New York]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Best Of New York]]>
    </line>
    <line>
      <![CDATA[TestDropDown3: test Click On Crossword]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Crossword]]>
    </line>
    <line>
      <![CDATA[TestDropDown3: test Click On Current Issue]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Current Issue]]>
    </line>
    <line>
      <![CDATA[TestDropDown3: test Click On Gift Subscription]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Gift Subscriptions]]>
    </line>
    <line>
      <![CDATA[TestDropDown3: test Click On Legal Leaders]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Legal Leaders]]>
    </line>
    <line>
      <![CDATA[TestDropDown3: test Click On Newsletters]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Newsletters]]>
    </line>
    <line>
      <![CDATA[TestDropDown3: test Click On The Urbanist]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On The Urbanist]]>
    </line>
    <line>
      <![CDATA[TestDropDown3: test Click On Videos]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Videos]]>
    </line>
    <line>
      <![CDATA[TestGiftSubscription: test Click On Not A Gift]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Not A Gift]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Gift Subscriptions]]>
    </line>
    <line>
      <![CDATA[TestGiftSubscription: test Subscribe To Magazine Via Not A Gift]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Subscribe To Dig And Print]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Not A Gift]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: get Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu: click On Gift Subscriptions]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Art Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Art]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Beauty Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Beauty]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Books Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Books]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Business Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Business]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Comedy Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Comedy]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Culture Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Culture]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Design Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Design Hunting]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Dining Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Dining]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Electronics Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Electronics]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Fashion Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Fashion]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Fitness Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Fitness]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Gift Guides Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Gift Guides]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Home Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Home]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Ideas Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Ideas]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Kids Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Kids]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Movies Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Movies]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Music Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Music]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Politics Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Politics]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Power Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Power]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Restaurant And Bars Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Restaurant And Bars]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Sales Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Sales]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Self Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Self]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Stream Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Stream]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Style Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Style]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: TV Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On TV]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Technology Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Technology]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Theater Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Theater]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Thousand Best Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Thousand Best]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Travel Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Travel]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenu: Weddings Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Weddings]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenuContinued: About Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On About]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenuContinued: Best Doctors Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Best Doctors]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenuContinued: Best Of NY Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Best Of New York]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenuContinued: Crossword Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Crossword]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenuContinued: Current Issue Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Current Issue]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenuContinued: Gift Guides Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Gift Guides]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenuContinued: Gift Subscription Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Gift Subscription]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenuContinued: Legal Leaders Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Legal Leaders]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenuContinued: Newsletters Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Newsletters]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenuContinued: Restaurant And Bars Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Restaurant And Bars]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenuContinued: Sales Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Sales]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenuContinued: Stream Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Stream]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenuContinued: The Urbanist Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On The Urbanist]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenuContinued: Thousand Best Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Thousand Best]]>
    </line>
    <line>
      <![CDATA[TestDropDownMenuContinued: Videos Icon Hover]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: click On Burger Icon]]>
    </line>
    <line>
      <![CDATA[DropDownMenu2: hover On Videos]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: click On The Cut Tab]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: get The Cut Web Element]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: click On Vulture Tab]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: get Vulture Web Element]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: click On Grub Street Tab]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: get Grub Street Web Element]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: click On Strategist Tab]]>
    </line>
    <line>
      <![CDATA[NYMagHomepage: get Strategist Web Element]]>
    </line>
  </reporter-output>
  <suite started-at="2020-03-10T23:02:45 EDT" name="NYMag Automation Script " finished-at="2020-03-10T23:35:34 EDT" duration-ms="1968884">
    <groups>
    </groups>
    <test started-at="2020-03-10T23:02:45 EDT" name="NYMag Home" finished-at="2020-03-10T23:35:34 EDT" duration-ms="1968884">
      <class name="testgiftsubscriptions.TestGiftSubscription">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testgiftsubscriptions.TestGiftSubscription@3bf9ce3e]" started-at="2020-03-10T23:25:58 EDT" name="setUp" finished-at="2020-03-10T23:26:07 EDT" duration-ms="8837" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testgiftsubscriptions.TestGiftSubscription@3bf9ce3e]" started-at="2020-03-10T23:26:07 EDT" name="startExtent" finished-at="2020-03-10T23:26:07 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testgiftsubscriptions.TestGiftSubscription.testClickOnNotAGift()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnNotAGift()[pri:0, instance:testgiftsubscriptions.TestGiftSubscription@3bf9ce3e]" started-at="2020-03-10T23:26:07 EDT" name="testClickOnNotAGift" finished-at="2020-03-10T23:26:31 EDT" duration-ms="23291" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestGiftSubscription: test Click On Not A Gift]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Not A Gift]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Gift Subscriptions]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnNotAGift -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testgiftsubscriptions.TestGiftSubscription@3bf9ce3e]" started-at="2020-03-10T23:26:31 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:26:31 EDT" duration-ms="812" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnNotAGift status=SUCCESS method=TestGiftSubscription.testClickOnNotAGift()[pri:0, instance:testgiftsubscriptions.TestGiftSubscription@3bf9ce3e] output=TestGiftSubscription: test Click On Not A Gift]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testgiftsubscriptions.TestGiftSubscription@3bf9ce3e]" started-at="2020-03-10T23:26:31 EDT" name="setUp" finished-at="2020-03-10T23:26:40 EDT" duration-ms="8641" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testgiftsubscriptions.TestGiftSubscription@3bf9ce3e]" started-at="2020-03-10T23:26:40 EDT" name="startExtent" finished-at="2020-03-10T23:26:40 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testgiftsubscriptions.TestGiftSubscription.testSubscribeToMagazineViaNotAGift()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testSubscribeToMagazineViaNotAGift()[pri:0, instance:testgiftsubscriptions.TestGiftSubscription@3bf9ce3e]" started-at="2020-03-10T23:26:40 EDT" name="testSubscribeToMagazineViaNotAGift" finished-at="2020-03-10T23:27:20 EDT" duration-ms="39646" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestGiftSubscription: test Subscribe To Magazine Via Not A Gift]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Subscribe To Dig And Print]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Not A Gift]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Gift Subscriptions]]>
            </line>
          </reporter-output>
        </test-method> <!-- testSubscribeToMagazineViaNotAGift -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testgiftsubscriptions.TestGiftSubscription@3bf9ce3e]" started-at="2020-03-10T23:27:20 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:27:21 EDT" duration-ms="1138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSubscribeToMagazineViaNotAGift status=SUCCESS method=TestGiftSubscription.testSubscribeToMagazineViaNotAGift()[pri:0, instance:testgiftsubscriptions.TestGiftSubscription@3bf9ce3e] output=TestGiftSubscription: test Subscribe To Magazine Via Not A Gift]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testgiftsubscriptions.TestGiftSubscription@3bf9ce3e]" started-at="2020-03-10T23:27:21 EDT" name="cleanUp" finished-at="2020-03-10T23:27:21 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testgiftsubscriptions.TestGiftSubscription -->
      <class name="testsignup.SignUpTest">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:04:44 EDT" name="setUp" finished-at="2020-03-10T23:04:53 EDT" duration-ms="8539" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:04:53 EDT" name="startExtent" finished-at="2020-03-10T23:04:53 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsignup.SignUpTest.testThatSubscribeBtnWorks()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testThatSubscribeBtnWorks()[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:04:53 EDT" name="testThatSubscribeBtnWorks" finished-at="2020-03-10T23:04:57 EDT" duration-ms="4115" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SignUpTest: test That Subscribe Btn Works]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: click On Subscribe Btn]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Click On Subscribe Btn]]>
            </line>
          </reporter-output>
        </test-method> <!-- testThatSubscribeBtnWorks -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:04:57 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:04:58 EDT" duration-ms="699" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testThatSubscribeBtnWorks status=SUCCESS method=SignUpTest.testThatSubscribeBtnWorks()[pri:0, instance:testsignup.SignUpTest@5fbdfdcf] output=SignUpTest: test That Subscribe Btn Works]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:04:58 EDT" name="setUp" finished-at="2020-03-10T23:05:08 EDT" duration-ms="9904" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:05:08 EDT" name="startExtent" finished-at="2020-03-10T23:05:08 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsignup.SignUpTest.testThatUserCanSignInWithValidCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testThatUserCanSignInWithValidCredentials()[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:05:08 EDT" name="testThatUserCanSignInWithValidCredentials" finished-at="2020-03-10T23:05:11 EDT" duration-ms="3102" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SignUpTest: test That User Can Sign In With Valid Credentials]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: click On User Sign In Btn]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Click On User Sign In Btn]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: type Email Name]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Enter Email Web Element]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: type User Password]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Enter Password]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: click On Sign In Btn]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Click On Sign In Btn Web Element]]>
            </line>
          </reporter-output>
        </test-method> <!-- testThatUserCanSignInWithValidCredentials -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:05:11 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:05:11 EDT" duration-ms="732" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testThatUserCanSignInWithValidCredentials status=SUCCESS method=SignUpTest.testThatUserCanSignInWithValidCredentials()[pri:0, instance:testsignup.SignUpTest@5fbdfdcf] output=SignUpTest: test That User Can Sign In With Valid Credentials]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:05:11 EDT" name="setUp" finished-at="2020-03-10T23:05:24 EDT" duration-ms="12185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:05:24 EDT" name="startExtent" finished-at="2020-03-10T23:05:24 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsignup.SignUpTest.testThatUserCannotSignInWithInvalidCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testThatUserCannotSignInWithInvalidCredentials()[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:05:24 EDT" name="testThatUserCannotSignInWithInvalidCredentials" finished-at="2020-03-10T23:05:28 EDT" duration-ms="4349" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SignUpTest: test That User Cannot Sign In With Invalid Credentials]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: click On User Sign In Btn]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Click On User Sign In Btn]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: type Email Name]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Enter Email Web Element]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: type User Password]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Enter Password]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: click On Sign In Btn]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Click On Sign In Btn Web Element]]>
            </line>
          </reporter-output>
        </test-method> <!-- testThatUserCannotSignInWithInvalidCredentials -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:05:28 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:05:29 EDT" duration-ms="730" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testThatUserCannotSignInWithInvalidCredentials status=SUCCESS method=SignUpTest.testThatUserCannotSignInWithInvalidCredentials()[pri:0, instance:testsignup.SignUpTest@5fbdfdcf] output=SignUpTest: test That User Cannot Sign In With Invalid Credentials]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:05:29 EDT" name="setUp" finished-at="2020-03-10T23:05:37 EDT" duration-ms="8087" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:05:37 EDT" name="startExtent" finished-at="2020-03-10T23:05:37 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsignup.SignUpTest.testThatUserCannotSignInWithoutEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testThatUserCannotSignInWithoutEmail()[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:05:37 EDT" name="testThatUserCannotSignInWithoutEmail" finished-at="2020-03-10T23:05:39 EDT" duration-ms="2373" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SignUpTest: test That User Cannot Sign In Without Email]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: click On User Sign In Btn]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Click On User Sign In Btn]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: type User Password]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Enter Password]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: click On Sign In Btn]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Click On Sign In Btn Web Element]]>
            </line>
          </reporter-output>
        </test-method> <!-- testThatUserCannotSignInWithoutEmail -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:05:39 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:05:40 EDT" duration-ms="769" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testThatUserCannotSignInWithoutEmail status=SUCCESS method=SignUpTest.testThatUserCannotSignInWithoutEmail()[pri:0, instance:testsignup.SignUpTest@5fbdfdcf] output=SignUpTest: test That User Cannot Sign In Without Email]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:05:40 EDT" name="setUp" finished-at="2020-03-10T23:05:50 EDT" duration-ms="9801" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:05:50 EDT" name="startExtent" finished-at="2020-03-10T23:05:50 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsignup.SignUpTest.testThatUserCannotSignInWithoutPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testThatUserCannotSignInWithoutPassword()[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:05:50 EDT" name="testThatUserCannotSignInWithoutPassword" finished-at="2020-03-10T23:05:52 EDT" duration-ms="2291" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SignUpTest: test That User Cannot Sign In Without Password]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: click On User Sign In Btn]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Click On User Sign In Btn]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: type Email Name]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Enter Email Web Element]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: click On Sign In Btn]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Click On Sign In Btn Web Element]]>
            </line>
          </reporter-output>
        </test-method> <!-- testThatUserCannotSignInWithoutPassword -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:05:52 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:05:53 EDT" duration-ms="782" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testThatUserCannotSignInWithoutPassword status=SUCCESS method=SignUpTest.testThatUserCannotSignInWithoutPassword()[pri:0, instance:testsignup.SignUpTest@5fbdfdcf] output=SignUpTest: test That User Cannot Sign In Without Password]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:05:53 EDT" name="setUp" finished-at="2020-03-10T23:06:09 EDT" duration-ms="16625" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:06:09 EDT" name="startExtent" finished-at="2020-03-10T23:06:09 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsignup.SignUpTest.testThatYouCanSignUpWithValidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testThatYouCanSignUpWithValidEmail()[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:06:09 EDT" name="testThatYouCanSignUpWithValidEmail" finished-at="2020-03-10T23:06:10 EDT" duration-ms="398" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SignUpTest: test That You Can Sign Up With Valid Email]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: type Email Name]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Enter Email Web Element]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: click On Submit]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Click On Submit Btn Web Element]]>
            </line>
          </reporter-output>
        </test-method> <!-- testThatYouCanSignUpWithValidEmail -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:06:10 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:06:10 EDT" duration-ms="712" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testThatYouCanSignUpWithValidEmail status=SUCCESS method=SignUpTest.testThatYouCanSignUpWithValidEmail()[pri:0, instance:testsignup.SignUpTest@5fbdfdcf] output=SignUpTest: test That You Can Sign Up With Valid Email]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:06:10 EDT" name="setUp" finished-at="2020-03-10T23:06:19 EDT" duration-ms="8495" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testThatYouCannotSignUpWithAnInvalidEmail()[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:06:19 EDT" name="testThatYouCannotSignUpWithAnInvalidEmail" finished-at="2020-03-10T23:06:19 EDT" duration-ms="326" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[SignUpTest: test That You Cannot Sign Up With An Invalid Email]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: type Email Name]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Enter Email Web Element]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: click On Submit]]>
            </line>
            <line>
              <![CDATA[NYMagSignUp: get Click On Submit Btn Web Element]]>
            </line>
          </reporter-output>
        </test-method> <!-- testThatYouCannotSignUpWithAnInvalidEmail -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:06:19 EDT" name="startExtent" finished-at="2020-03-10T23:06:19 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testsignup.SignUpTest.testThatYouCannotSignUpWithAnInvalidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:06:19 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:06:20 EDT" duration-ms="1224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testThatYouCannotSignUpWithAnInvalidEmail status=SUCCESS method=SignUpTest.testThatYouCannotSignUpWithAnInvalidEmail()[pri:0, instance:testsignup.SignUpTest@5fbdfdcf] output=SignUpTest: test That You Cannot Sign Up With An Invalid Email]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testsignup.SignUpTest@5fbdfdcf]" started-at="2020-03-10T23:06:20 EDT" name="cleanUp" finished-at="2020-03-10T23:06:20 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testsignup.SignUpTest -->
      <class name="testdropdownmenu.TestDropDownMenuContinued">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:32:37 EDT" name="setUp" finished-at="2020-03-10T23:32:46 EDT" duration-ms="9494" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="AboutIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:32:46 EDT" name="AboutIconHover" finished-at="2020-03-10T23:32:46 EDT" duration-ms="127" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenuContinued: About Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On About]]>
            </line>
          </reporter-output>
        </test-method> <!-- AboutIconHover -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:32:46 EDT" name="startExtent" finished-at="2020-03-10T23:32:46 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenuContinued.AboutIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:32:46 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:32:47 EDT" duration-ms="727" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AboutIconHover status=SUCCESS method=TestDropDownMenuContinued.AboutIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8] output=TestDropDownMenuContinued: About Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:32:47 EDT" name="setUp" finished-at="2020-03-10T23:32:57 EDT" duration-ms="10059" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:32:57 EDT" name="startExtent" finished-at="2020-03-10T23:32:57 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenuContinued.BestDoctorsIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="BestDoctorsIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:32:57 EDT" name="BestDoctorsIconHover" finished-at="2020-03-10T23:32:57 EDT" duration-ms="326" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenuContinued: Best Doctors Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Best Doctors]]>
            </line>
          </reporter-output>
        </test-method> <!-- BestDoctorsIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:32:57 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:32:59 EDT" duration-ms="1169" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BestDoctorsIconHover status=SUCCESS method=TestDropDownMenuContinued.BestDoctorsIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8] output=TestDropDownMenuContinued: Best Doctors Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:32:59 EDT" name="setUp" finished-at="2020-03-10T23:33:06 EDT" duration-ms="7803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:06 EDT" name="startExtent" finished-at="2020-03-10T23:33:06 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenuContinued.BestOfNYIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="BestOfNYIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:06 EDT" name="BestOfNYIconHover" finished-at="2020-03-10T23:33:07 EDT" duration-ms="219" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenuContinued: Best Of NY Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Best Of New York]]>
            </line>
          </reporter-output>
        </test-method> <!-- BestOfNYIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:07 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:33:07 EDT" duration-ms="929" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BestOfNYIconHover status=SUCCESS method=TestDropDownMenuContinued.BestOfNYIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8] output=TestDropDownMenuContinued: Best Of NY Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:07 EDT" name="setUp" finished-at="2020-03-10T23:33:17 EDT" duration-ms="9357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="CrosswordIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:17 EDT" name="CrosswordIconHover" finished-at="2020-03-10T23:33:17 EDT" duration-ms="245" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenuContinued: Crossword Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Crossword]]>
            </line>
          </reporter-output>
        </test-method> <!-- CrosswordIconHover -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:17 EDT" name="startExtent" finished-at="2020-03-10T23:33:17 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenuContinued.CrosswordIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:17 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:33:18 EDT" duration-ms="988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CrosswordIconHover status=SUCCESS method=TestDropDownMenuContinued.CrosswordIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8] output=TestDropDownMenuContinued: Crossword Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:18 EDT" name="setUp" finished-at="2020-03-10T23:33:33 EDT" duration-ms="14456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="CurrentIssueIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:33 EDT" name="CurrentIssueIconHover" finished-at="2020-03-10T23:33:33 EDT" duration-ms="111" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenuContinued: Current Issue Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Current Issue]]>
            </line>
          </reporter-output>
        </test-method> <!-- CurrentIssueIconHover -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:33 EDT" name="startExtent" finished-at="2020-03-10T23:33:33 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenuContinued.CurrentIssueIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:33 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:33:34 EDT" duration-ms="1618" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CurrentIssueIconHover status=SUCCESS method=TestDropDownMenuContinued.CurrentIssueIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8] output=TestDropDownMenuContinued: Current Issue Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:34 EDT" name="setUp" finished-at="2020-03-10T23:33:43 EDT" duration-ms="8534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="GiftGuidesIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:43 EDT" name="GiftGuidesIconHover" finished-at="2020-03-10T23:33:43 EDT" duration-ms="124" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenuContinued: Gift Guides Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Gift Guides]]>
            </line>
          </reporter-output>
        </test-method> <!-- GiftGuidesIconHover -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:43 EDT" name="startExtent" finished-at="2020-03-10T23:33:43 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenuContinued.GiftGuidesIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:43 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:33:45 EDT" duration-ms="1614" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GiftGuidesIconHover status=SUCCESS method=TestDropDownMenuContinued.GiftGuidesIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8] output=TestDropDownMenuContinued: Gift Guides Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:45 EDT" name="setUp" finished-at="2020-03-10T23:33:55 EDT" duration-ms="10741" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="GiftSubscriptionIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:55 EDT" name="GiftSubscriptionIconHover" finished-at="2020-03-10T23:33:56 EDT" duration-ms="424" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenuContinued: Gift Subscription Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Gift Subscription]]>
            </line>
          </reporter-output>
        </test-method> <!-- GiftSubscriptionIconHover -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:55 EDT" name="startExtent" finished-at="2020-03-10T23:33:55 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenuContinued.GiftSubscriptionIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:56 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:33:56 EDT" duration-ms="725" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GiftSubscriptionIconHover status=SUCCESS method=TestDropDownMenuContinued.GiftSubscriptionIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8] output=TestDropDownMenuContinued: Gift Subscription Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:33:56 EDT" name="setUp" finished-at="2020-03-10T23:34:05 EDT" duration-ms="8872" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:05 EDT" name="startExtent" finished-at="2020-03-10T23:34:05 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenuContinued.LegalLeadersIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="LegalLeadersIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:05 EDT" name="LegalLeadersIconHover" finished-at="2020-03-10T23:34:05 EDT" duration-ms="114" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenuContinued: Legal Leaders Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Legal Leaders]]>
            </line>
          </reporter-output>
        </test-method> <!-- LegalLeadersIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:05 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:34:06 EDT" duration-ms="746" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LegalLeadersIconHover status=SUCCESS method=TestDropDownMenuContinued.LegalLeadersIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8] output=TestDropDownMenuContinued: Legal Leaders Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:06 EDT" name="setUp" finished-at="2020-03-10T23:34:15 EDT" duration-ms="8997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:15 EDT" name="startExtent" finished-at="2020-03-10T23:34:15 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenuContinued.NewslettersIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="NewslettersIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:15 EDT" name="NewslettersIconHover" finished-at="2020-03-10T23:34:15 EDT" duration-ms="115" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenuContinued: Newsletters Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Newsletters]]>
            </line>
          </reporter-output>
        </test-method> <!-- NewslettersIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:15 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:34:16 EDT" duration-ms="707" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NewslettersIconHover status=SUCCESS method=TestDropDownMenuContinued.NewslettersIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8] output=TestDropDownMenuContinued: Newsletters Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:16 EDT" name="setUp" finished-at="2020-03-10T23:34:27 EDT" duration-ms="11338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:27 EDT" name="startExtent" finished-at="2020-03-10T23:34:27 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenuContinued.RestaurantAndBarsIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="RestaurantAndBarsIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:27 EDT" name="RestaurantAndBarsIconHover" finished-at="2020-03-10T23:34:27 EDT" duration-ms="179" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenuContinued: Restaurant And Bars Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Restaurant And Bars]]>
            </line>
          </reporter-output>
        </test-method> <!-- RestaurantAndBarsIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:27 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:34:28 EDT" duration-ms="755" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RestaurantAndBarsIconHover status=SUCCESS method=TestDropDownMenuContinued.RestaurantAndBarsIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8] output=TestDropDownMenuContinued: Restaurant And Bars Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:28 EDT" name="setUp" finished-at="2020-03-10T23:34:39 EDT" duration-ms="10389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:39 EDT" name="startExtent" finished-at="2020-03-10T23:34:39 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenuContinued.SalesIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="SalesIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:39 EDT" name="SalesIconHover" finished-at="2020-03-10T23:34:39 EDT" duration-ms="181" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenuContinued: Sales Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Sales]]>
            </line>
          </reporter-output>
        </test-method> <!-- SalesIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:39 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:34:40 EDT" duration-ms="1167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SalesIconHover status=SUCCESS method=TestDropDownMenuContinued.SalesIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8] output=TestDropDownMenuContinued: Sales Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:40 EDT" name="setUp" finished-at="2020-03-10T23:34:52 EDT" duration-ms="12111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:52 EDT" name="startExtent" finished-at="2020-03-10T23:34:52 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenuContinued.StreamIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="StreamIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:52 EDT" name="StreamIconHover" finished-at="2020-03-10T23:34:53 EDT" duration-ms="844" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenuContinued: Stream Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Stream]]>
            </line>
          </reporter-output>
        </test-method> <!-- StreamIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:53 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:34:54 EDT" duration-ms="933" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StreamIconHover status=SUCCESS method=TestDropDownMenuContinued.StreamIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8] output=TestDropDownMenuContinued: Stream Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:34:54 EDT" name="setUp" finished-at="2020-03-10T23:35:02 EDT" duration-ms="8020" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:35:02 EDT" name="startExtent" finished-at="2020-03-10T23:35:02 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenuContinued.TheUrbanistIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="TheUrbanistIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:35:02 EDT" name="TheUrbanistIconHover" finished-at="2020-03-10T23:35:02 EDT" duration-ms="176" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenuContinued: The Urbanist Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On The Urbanist]]>
            </line>
          </reporter-output>
        </test-method> <!-- TheUrbanistIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:35:02 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:35:03 EDT" duration-ms="795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TheUrbanistIconHover status=SUCCESS method=TestDropDownMenuContinued.TheUrbanistIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8] output=TestDropDownMenuContinued: The Urbanist Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:35:03 EDT" name="setUp" finished-at="2020-03-10T23:35:13 EDT" duration-ms="10154" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:35:13 EDT" name="startExtent" finished-at="2020-03-10T23:35:13 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenuContinued.ThousandBestIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="ThousandBestIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:35:13 EDT" name="ThousandBestIconHover" finished-at="2020-03-10T23:35:14 EDT" duration-ms="504" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenuContinued: Thousand Best Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Thousand Best]]>
            </line>
          </reporter-output>
        </test-method> <!-- ThousandBestIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:35:14 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:35:15 EDT" duration-ms="1401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ThousandBestIconHover status=SUCCESS method=TestDropDownMenuContinued.ThousandBestIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8] output=TestDropDownMenuContinued: Thousand Best Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:35:15 EDT" name="setUp" finished-at="2020-03-10T23:35:23 EDT" duration-ms="8403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:35:23 EDT" name="startExtent" finished-at="2020-03-10T23:35:23 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenuContinued.VideosIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="VideosIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:35:23 EDT" name="VideosIconHover" finished-at="2020-03-10T23:35:24 EDT" duration-ms="241" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenuContinued: Videos Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Videos]]>
            </line>
          </reporter-output>
        </test-method> <!-- VideosIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:35:24 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:35:24 EDT" duration-ms="778" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VideosIconHover status=SUCCESS method=TestDropDownMenuContinued.VideosIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8] output=TestDropDownMenuContinued: Videos Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testdropdownmenu.TestDropDownMenuContinued@71def8f8]" started-at="2020-03-10T23:35:24 EDT" name="cleanUp" finished-at="2020-03-10T23:35:24 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testdropdownmenu.TestDropDownMenuContinued -->
      <class name="keywordtests.TestKeyword">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:keywordtests.TestKeyword@383bfa16]" started-at="2020-03-10T23:35:24 EDT" name="setUp" finished-at="2020-03-10T23:35:32 EDT" duration-ms="7577" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:keywordtests.TestKeyword@383bfa16]" started-at="2020-03-10T23:35:32 EDT" name="startExtent" finished-at="2020-03-10T23:35:32 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void keywordtests.TestKeyword.testKeyWord() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testKeyWord()[pri:0, instance:keywordtests.TestKeyword@383bfa16]" started-at="2020-03-10T23:35:32 EDT" name="testKeyWord" finished-at="2020-03-10T23:35:33 EDT" duration-ms="1389" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[NYMagHomepage: click On The Cut Tab]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: get The Cut Web Element]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: click On Vulture Tab]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: get Vulture Web Element]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: click On Grub Street Tab]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: get Grub Street Web Element]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: click On Strategist Tab]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: get Strategist Web Element]]>
            </line>
          </reporter-output>
        </test-method> <!-- testKeyWord -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:keywordtests.TestKeyword@383bfa16]" started-at="2020-03-10T23:35:33 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:35:34 EDT" duration-ms="889" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testKeyWord status=SUCCESS method=TestKeyword.testKeyWord()[pri:0, instance:keywordtests.TestKeyword@383bfa16] output=NYMagHomepage: click On The Cut Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:keywordtests.TestKeyword@383bfa16]" started-at="2020-03-10T23:35:34 EDT" name="cleanUp" finished-at="2020-03-10T23:35:34 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- keywordtests.TestKeyword -->
      <class name="testdropdownmenu.TestDropDown3">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:22:11 EDT" name="setUp" finished-at="2020-03-10T23:22:21 EDT" duration-ms="9709" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:22:21 EDT" name="startExtent" finished-at="2020-03-10T23:22:21 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown3.testClickOnAbout()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnAbout()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:22:21 EDT" name="testClickOnAbout" finished-at="2020-03-10T23:22:36 EDT" duration-ms="15148" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown3: test Click On About]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On About]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnAbout -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:22:36 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:22:37 EDT" duration-ms="1605" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnAbout status=SUCCESS method=TestDropDown3.testClickOnAbout()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5] output=TestDropDown3: test Click On About]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:22:37 EDT" name="setUp" finished-at="2020-03-10T23:22:48 EDT" duration-ms="10927" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:22:48 EDT" name="startExtent" finished-at="2020-03-10T23:22:48 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown3.testClickOnBestDoctors()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnBestDoctors()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:22:48 EDT" name="testClickOnBestDoctors" finished-at="2020-03-10T23:23:00 EDT" duration-ms="11988" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown3: test Click On Best Doctors]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Best Doctors]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnBestDoctors -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:23:00 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:23:01 EDT" duration-ms="710" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnBestDoctors status=SUCCESS method=TestDropDown3.testClickOnBestDoctors()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5] output=TestDropDown3: test Click On Best Doctors]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:23:01 EDT" name="setUp" finished-at="2020-03-10T23:23:10 EDT" duration-ms="8841" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnBestOfNewYork()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:23:10 EDT" name="testClickOnBestOfNewYork" finished-at="2020-03-10T23:23:22 EDT" duration-ms="12084" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown3: test Click On Best Of New York]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Best Of New York]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnBestOfNewYork -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:23:10 EDT" name="startExtent" finished-at="2020-03-10T23:23:10 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown3.testClickOnBestOfNewYork()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:23:22 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:23:23 EDT" duration-ms="719" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnBestOfNewYork status=SUCCESS method=TestDropDown3.testClickOnBestOfNewYork()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5] output=TestDropDown3: test Click On Best Of New York]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:23:23 EDT" name="setUp" finished-at="2020-03-10T23:23:31 EDT" duration-ms="8335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnCrossword()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:23:31 EDT" name="testClickOnCrossword" finished-at="2020-03-10T23:23:45 EDT" duration-ms="14080" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown3: test Click On Crossword]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Crossword]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnCrossword -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:23:31 EDT" name="startExtent" finished-at="2020-03-10T23:23:31 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown3.testClickOnCrossword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:23:45 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:23:46 EDT" duration-ms="801" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnCrossword status=SUCCESS method=TestDropDown3.testClickOnCrossword()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5] output=TestDropDown3: test Click On Crossword]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:23:46 EDT" name="setUp" finished-at="2020-03-10T23:23:53 EDT" duration-ms="7389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnCurrentIssue()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:23:53 EDT" name="testClickOnCurrentIssue" finished-at="2020-03-10T23:24:08 EDT" duration-ms="14252" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown3: test Click On Current Issue]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Current Issue]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnCurrentIssue -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:23:53 EDT" name="startExtent" finished-at="2020-03-10T23:23:53 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown3.testClickOnCurrentIssue()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:24:08 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:24:08 EDT" duration-ms="723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnCurrentIssue status=SUCCESS method=TestDropDown3.testClickOnCurrentIssue()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5] output=TestDropDown3: test Click On Current Issue]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:24:08 EDT" name="setUp" finished-at="2020-03-10T23:24:17 EDT" duration-ms="8247" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:24:17 EDT" name="startExtent" finished-at="2020-03-10T23:24:17 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown3.testClickOnGiftSubscription()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnGiftSubscription()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:24:17 EDT" name="testClickOnGiftSubscription" finished-at="2020-03-10T23:24:30 EDT" duration-ms="13632" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown3: test Click On Gift Subscription]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Gift Subscriptions]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnGiftSubscription -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:24:30 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:24:31 EDT" duration-ms="713" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnGiftSubscription status=SUCCESS method=TestDropDown3.testClickOnGiftSubscription()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5] output=TestDropDown3: test Click On Gift Subscription]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:24:31 EDT" name="setUp" finished-at="2020-03-10T23:24:40 EDT" duration-ms="8999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:24:40 EDT" name="startExtent" finished-at="2020-03-10T23:24:40 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown3.testClickOnLegalLeaders()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnLegalLeaders()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:24:40 EDT" name="testClickOnLegalLeaders" finished-at="2020-03-10T23:24:53 EDT" duration-ms="12996" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown3: test Click On Legal Leaders]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Legal Leaders]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnLegalLeaders -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:24:53 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:24:54 EDT" duration-ms="705" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnLegalLeaders status=SUCCESS method=TestDropDown3.testClickOnLegalLeaders()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5] output=TestDropDown3: test Click On Legal Leaders]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:24:54 EDT" name="setUp" finished-at="2020-03-10T23:25:02 EDT" duration-ms="8844" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnNewsletters()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:25:02 EDT" name="testClickOnNewsletters" finished-at="2020-03-10T23:25:14 EDT" duration-ms="11981" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown3: test Click On Newsletters]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Newsletters]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnNewsletters -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:25:02 EDT" name="startExtent" finished-at="2020-03-10T23:25:02 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown3.testClickOnNewsletters()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:25:14 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:25:15 EDT" duration-ms="703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnNewsletters status=SUCCESS method=TestDropDown3.testClickOnNewsletters()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5] output=TestDropDown3: test Click On Newsletters]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:25:15 EDT" name="setUp" finished-at="2020-03-10T23:25:24 EDT" duration-ms="8769" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:25:24 EDT" name="startExtent" finished-at="2020-03-10T23:25:24 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown3.testClickOnTheUrbanist()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnTheUrbanist()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:25:24 EDT" name="testClickOnTheUrbanist" finished-at="2020-03-10T23:25:36 EDT" duration-ms="11965" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown3: test Click On The Urbanist]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On The Urbanist]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnTheUrbanist -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:25:36 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:25:37 EDT" duration-ms="728" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnTheUrbanist status=SUCCESS method=TestDropDown3.testClickOnTheUrbanist()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5] output=TestDropDown3: test Click On The Urbanist]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:25:37 EDT" name="setUp" finished-at="2020-03-10T23:25:45 EDT" duration-ms="8765" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnVideos()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:25:45 EDT" name="testClickOnVideos" finished-at="2020-03-10T23:25:58 EDT" duration-ms="12434" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown3: test Click On Videos]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Videos]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnVideos -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:25:45 EDT" name="startExtent" finished-at="2020-03-10T23:25:45 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown3.testClickOnVideos()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:25:58 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:25:58 EDT" duration-ms="723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnVideos status=SUCCESS method=TestDropDown3.testClickOnVideos()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5] output=TestDropDown3: test Click On Videos]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testdropdownmenu.TestDropDown3@156b88f5]" started-at="2020-03-10T23:25:58 EDT" name="cleanUp" finished-at="2020-03-10T23:25:58 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testdropdownmenu.TestDropDown3 -->
      <class name="testdropdownmenu.TestDropDownMenu">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:27:21 EDT" name="setUp" finished-at="2020-03-10T23:27:29 EDT" duration-ms="8472" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:27:29 EDT" name="startExtent" finished-at="2020-03-10T23:27:29 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.ArtIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="ArtIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:27:29 EDT" name="ArtIconHover" finished-at="2020-03-10T23:27:29 EDT" duration-ms="148" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Art Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Art]]>
            </line>
          </reporter-output>
        </test-method> <!-- ArtIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:27:29 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:27:30 EDT" duration-ms="734" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ArtIconHover status=SUCCESS method=TestDropDownMenu.ArtIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Art Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:27:30 EDT" name="setUp" finished-at="2020-03-10T23:27:40 EDT" duration-ms="9847" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:27:40 EDT" name="startExtent" finished-at="2020-03-10T23:27:40 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.BeautyIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="BeautyIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:27:40 EDT" name="BeautyIconHover" finished-at="2020-03-10T23:27:40 EDT" duration-ms="181" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Beauty Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Beauty]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeautyIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:27:40 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:27:41 EDT" duration-ms="1125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BeautyIconHover status=SUCCESS method=TestDropDownMenu.BeautyIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Beauty Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:27:41 EDT" name="setUp" finished-at="2020-03-10T23:27:50 EDT" duration-ms="8319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:27:50 EDT" name="startExtent" finished-at="2020-03-10T23:27:50 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.BooksIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="BooksIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:27:50 EDT" name="BooksIconHover" finished-at="2020-03-10T23:27:50 EDT" duration-ms="129" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Books Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Books]]>
            </line>
          </reporter-output>
        </test-method> <!-- BooksIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:27:50 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:27:51 EDT" duration-ms="693" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BooksIconHover status=SUCCESS method=TestDropDownMenu.BooksIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Books Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:27:51 EDT" name="setUp" finished-at="2020-03-10T23:27:59 EDT" duration-ms="8648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="BusinessIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:27:59 EDT" name="BusinessIconHover" finished-at="2020-03-10T23:27:59 EDT" duration-ms="172" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Business Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Business]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
          </reporter-output>
        </test-method> <!-- BusinessIconHover -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:27:59 EDT" name="startExtent" finished-at="2020-03-10T23:27:59 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.BusinessIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:27:59 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:28:00 EDT" duration-ms="738" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BusinessIconHover status=SUCCESS method=TestDropDownMenu.BusinessIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Business Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:00 EDT" name="setUp" finished-at="2020-03-10T23:28:13 EDT" duration-ms="13029" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ComedyIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:13 EDT" name="ComedyIconHover" finished-at="2020-03-10T23:28:13 EDT" duration-ms="162" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Comedy Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Comedy]]>
            </line>
          </reporter-output>
        </test-method> <!-- ComedyIconHover -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:13 EDT" name="startExtent" finished-at="2020-03-10T23:28:13 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.ComedyIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:13 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:28:14 EDT" duration-ms="852" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ComedyIconHover status=SUCCESS method=TestDropDownMenu.ComedyIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Comedy Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:14 EDT" name="setUp" finished-at="2020-03-10T23:28:23 EDT" duration-ms="8961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:23 EDT" name="startExtent" finished-at="2020-03-10T23:28:23 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.CultureIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="CultureIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:23 EDT" name="CultureIconHover" finished-at="2020-03-10T23:28:23 EDT" duration-ms="125" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Culture Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Culture]]>
            </line>
          </reporter-output>
        </test-method> <!-- CultureIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:23 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:28:25 EDT" duration-ms="1334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CultureIconHover status=SUCCESS method=TestDropDownMenu.CultureIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Culture Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:25 EDT" name="setUp" finished-at="2020-03-10T23:28:33 EDT" duration-ms="8046" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:33 EDT" name="startExtent" finished-at="2020-03-10T23:28:33 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.DesignIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="DesignIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:33 EDT" name="DesignIconHover" finished-at="2020-03-10T23:28:33 EDT" duration-ms="161" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Design Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Design Hunting]]>
            </line>
          </reporter-output>
        </test-method> <!-- DesignIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:33 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:28:33 EDT" duration-ms="748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DesignIconHover status=SUCCESS method=TestDropDownMenu.DesignIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Design Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:33 EDT" name="setUp" finished-at="2020-03-10T23:28:47 EDT" duration-ms="13882" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:47 EDT" name="startExtent" finished-at="2020-03-10T23:28:47 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.DiningIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="DiningIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:47 EDT" name="DiningIconHover" finished-at="2020-03-10T23:28:48 EDT" duration-ms="156" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Dining Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Dining]]>
            </line>
          </reporter-output>
        </test-method> <!-- DiningIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:48 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:28:49 EDT" duration-ms="1563" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DiningIconHover status=SUCCESS method=TestDropDownMenu.DiningIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Dining Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:28:49 EDT" name="setUp" finished-at="2020-03-10T23:29:00 EDT" duration-ms="11078" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:00 EDT" name="startExtent" finished-at="2020-03-10T23:29:00 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.ElectronicsIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="ElectronicsIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:00 EDT" name="ElectronicsIconHover" finished-at="2020-03-10T23:29:00 EDT" duration-ms="127" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Electronics Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Electronics]]>
            </line>
          </reporter-output>
        </test-method> <!-- ElectronicsIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:00 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:29:02 EDT" duration-ms="1212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ElectronicsIconHover status=SUCCESS method=TestDropDownMenu.ElectronicsIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Electronics Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:02 EDT" name="setUp" finished-at="2020-03-10T23:29:09 EDT" duration-ms="7805" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="FashionIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:09 EDT" name="FashionIconHover" finished-at="2020-03-10T23:29:10 EDT" duration-ms="219" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Fashion Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Fashion]]>
            </line>
          </reporter-output>
        </test-method> <!-- FashionIconHover -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:09 EDT" name="startExtent" finished-at="2020-03-10T23:29:09 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.FashionIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:10 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:29:10 EDT" duration-ms="829" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FashionIconHover status=SUCCESS method=TestDropDownMenu.FashionIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Fashion Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:10 EDT" name="setUp" finished-at="2020-03-10T23:29:21 EDT" duration-ms="10669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:21 EDT" name="startExtent" finished-at="2020-03-10T23:29:21 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.FitnessIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="FitnessIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:21 EDT" name="FitnessIconHover" finished-at="2020-03-10T23:29:21 EDT" duration-ms="187" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Fitness Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Fitness]]>
            </line>
          </reporter-output>
        </test-method> <!-- FitnessIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:21 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:29:22 EDT" duration-ms="1163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FitnessIconHover status=SUCCESS method=TestDropDownMenu.FitnessIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Fitness Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:22 EDT" name="setUp" finished-at="2020-03-10T23:29:32 EDT" duration-ms="10059" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:32 EDT" name="startExtent" finished-at="2020-03-10T23:29:32 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.GiftGuidesIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="GiftGuidesIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:32 EDT" name="GiftGuidesIconHover" finished-at="2020-03-10T23:29:33 EDT" duration-ms="177" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Gift Guides Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Gift Guides]]>
            </line>
          </reporter-output>
        </test-method> <!-- GiftGuidesIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:33 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:29:33 EDT" duration-ms="788" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GiftGuidesIconHover status=SUCCESS method=TestDropDownMenu.GiftGuidesIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Gift Guides Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:33 EDT" name="setUp" finished-at="2020-03-10T23:29:42 EDT" duration-ms="8277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="HomeIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:42 EDT" name="HomeIconHover" finished-at="2020-03-10T23:29:42 EDT" duration-ms="214" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Home Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Home]]>
            </line>
          </reporter-output>
        </test-method> <!-- HomeIconHover -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:42 EDT" name="startExtent" finished-at="2020-03-10T23:29:42 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.HomeIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:42 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:29:43 EDT" duration-ms="710" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HomeIconHover status=SUCCESS method=TestDropDownMenu.HomeIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Home Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:43 EDT" name="setUp" finished-at="2020-03-10T23:29:51 EDT" duration-ms="8589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:51 EDT" name="startExtent" finished-at="2020-03-10T23:29:51 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.IdeasIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="IdeasIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:51 EDT" name="IdeasIconHover" finished-at="2020-03-10T23:29:51 EDT" duration-ms="112" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Ideas Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Ideas]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
          </reporter-output>
        </test-method> <!-- IdeasIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:51 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:29:52 EDT" duration-ms="712" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IdeasIconHover status=SUCCESS method=TestDropDownMenu.IdeasIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Ideas Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:29:52 EDT" name="setUp" finished-at="2020-03-10T23:30:02 EDT" duration-ms="9906" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="KidsIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:02 EDT" name="KidsIconHover" finished-at="2020-03-10T23:30:02 EDT" duration-ms="152" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Kids Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Kids]]>
            </line>
          </reporter-output>
        </test-method> <!-- KidsIconHover -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:02 EDT" name="startExtent" finished-at="2020-03-10T23:30:02 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.KidsIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:02 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:30:03 EDT" duration-ms="712" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=KidsIconHover status=SUCCESS method=TestDropDownMenu.KidsIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Kids Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:03 EDT" name="setUp" finished-at="2020-03-10T23:30:11 EDT" duration-ms="8551" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:11 EDT" name="startExtent" finished-at="2020-03-10T23:30:11 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.MoviesIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="MoviesIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:11 EDT" name="MoviesIconHover" finished-at="2020-03-10T23:30:12 EDT" duration-ms="166" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Movies Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Movies]]>
            </line>
          </reporter-output>
        </test-method> <!-- MoviesIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:12 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:30:13 EDT" duration-ms="1167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MoviesIconHover status=SUCCESS method=TestDropDownMenu.MoviesIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Movies Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:13 EDT" name="setUp" finished-at="2020-03-10T23:30:20 EDT" duration-ms="7803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:20 EDT" name="startExtent" finished-at="2020-03-10T23:30:20 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.MusicIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="MusicIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:20 EDT" name="MusicIconHover" finished-at="2020-03-10T23:30:21 EDT" duration-ms="141" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Music Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Music]]>
            </line>
          </reporter-output>
        </test-method> <!-- MusicIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:21 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:30:21 EDT" duration-ms="726" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MusicIconHover status=SUCCESS method=TestDropDownMenu.MusicIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Music Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:21 EDT" name="setUp" finished-at="2020-03-10T23:30:30 EDT" duration-ms="8810" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="PoliticsIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:30 EDT" name="PoliticsIconHover" finished-at="2020-03-10T23:30:30 EDT" duration-ms="241" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Politics Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Politics]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
          </reporter-output>
        </test-method> <!-- PoliticsIconHover -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:30 EDT" name="startExtent" finished-at="2020-03-10T23:30:30 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.PoliticsIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:30 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:30:31 EDT" duration-ms="681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PoliticsIconHover status=SUCCESS method=TestDropDownMenu.PoliticsIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Politics Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:31 EDT" name="setUp" finished-at="2020-03-10T23:30:42 EDT" duration-ms="10493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:42 EDT" name="startExtent" finished-at="2020-03-10T23:30:42 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.PowerIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="PowerIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:42 EDT" name="PowerIconHover" finished-at="2020-03-10T23:30:42 EDT" duration-ms="270" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Power Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Power]]>
            </line>
          </reporter-output>
        </test-method> <!-- PowerIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:42 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:30:43 EDT" duration-ms="694" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PowerIconHover status=SUCCESS method=TestDropDownMenu.PowerIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Power Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:43 EDT" name="setUp" finished-at="2020-03-10T23:30:52 EDT" duration-ms="9763" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:52 EDT" name="startExtent" finished-at="2020-03-10T23:30:52 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.RestaurantAndBarsIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="RestaurantAndBarsIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:52 EDT" name="RestaurantAndBarsIconHover" finished-at="2020-03-10T23:30:52 EDT" duration-ms="119" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Restaurant And Bars Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Restaurant And Bars]]>
            </line>
          </reporter-output>
        </test-method> <!-- RestaurantAndBarsIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:52 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:30:54 EDT" duration-ms="1444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RestaurantAndBarsIconHover status=SUCCESS method=TestDropDownMenu.RestaurantAndBarsIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Restaurant And Bars Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:30:54 EDT" name="setUp" finished-at="2020-03-10T23:31:03 EDT" duration-ms="8699" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SalesIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:03 EDT" name="SalesIconHover" finished-at="2020-03-10T23:31:03 EDT" duration-ms="132" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Sales Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Sales]]>
            </line>
          </reporter-output>
        </test-method> <!-- SalesIconHover -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:03 EDT" name="startExtent" finished-at="2020-03-10T23:31:03 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.SalesIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:03 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:31:04 EDT" duration-ms="1480" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SalesIconHover status=SUCCESS method=TestDropDownMenu.SalesIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Sales Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:04 EDT" name="setUp" finished-at="2020-03-10T23:31:12 EDT" duration-ms="7718" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SelfIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:12 EDT" name="SelfIconHover" finished-at="2020-03-10T23:31:12 EDT" duration-ms="444" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Self Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Self]]>
            </line>
          </reporter-output>
        </test-method> <!-- SelfIconHover -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:12 EDT" name="startExtent" finished-at="2020-03-10T23:31:12 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.SelfIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:12 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:31:13 EDT" duration-ms="698" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelfIconHover status=SUCCESS method=TestDropDownMenu.SelfIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Self Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:13 EDT" name="setUp" finished-at="2020-03-10T23:31:22 EDT" duration-ms="9269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:22 EDT" name="startExtent" finished-at="2020-03-10T23:31:22 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.StreamIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="StreamIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:22 EDT" name="StreamIconHover" finished-at="2020-03-10T23:31:22 EDT" duration-ms="167" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Stream Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Stream]]>
            </line>
          </reporter-output>
        </test-method> <!-- StreamIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:22 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:31:23 EDT" duration-ms="742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StreamIconHover status=SUCCESS method=TestDropDownMenu.StreamIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Stream Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:23 EDT" name="setUp" finished-at="2020-03-10T23:31:31 EDT" duration-ms="8082" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:31 EDT" name="startExtent" finished-at="2020-03-10T23:31:31 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.StyleIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="StyleIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:31 EDT" name="StyleIconHover" finished-at="2020-03-10T23:31:32 EDT" duration-ms="612" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Style Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Style]]>
            </line>
          </reporter-output>
        </test-method> <!-- StyleIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:32 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:31:33 EDT" duration-ms="1028" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StyleIconHover status=SUCCESS method=TestDropDownMenu.StyleIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Style Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:33 EDT" name="setUp" finished-at="2020-03-10T23:31:41 EDT" duration-ms="7841" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TVIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:41 EDT" name="TVIconHover" finished-at="2020-03-10T23:31:41 EDT" duration-ms="205" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: TV Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On TV]]>
            </line>
          </reporter-output>
        </test-method> <!-- TVIconHover -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:41 EDT" name="startExtent" finished-at="2020-03-10T23:31:41 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.TVIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:41 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:31:42 EDT" duration-ms="938" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TVIconHover status=SUCCESS method=TestDropDownMenu.TVIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: TV Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:42 EDT" name="setUp" finished-at="2020-03-10T23:31:53 EDT" duration-ms="11238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:53 EDT" name="startExtent" finished-at="2020-03-10T23:31:53 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.TechnologyIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="TechnologyIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:53 EDT" name="TechnologyIconHover" finished-at="2020-03-10T23:31:53 EDT" duration-ms="114" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Technology Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Technology]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
          </reporter-output>
        </test-method> <!-- TechnologyIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:53 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:31:54 EDT" duration-ms="1191" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TechnologyIconHover status=SUCCESS method=TestDropDownMenu.TechnologyIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Technology Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:31:54 EDT" name="setUp" finished-at="2020-03-10T23:32:04 EDT" duration-ms="9413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:32:04 EDT" name="startExtent" finished-at="2020-03-10T23:32:04 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.TheaterIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="TheaterIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:32:04 EDT" name="TheaterIconHover" finished-at="2020-03-10T23:32:04 EDT" duration-ms="185" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Theater Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Theater]]>
            </line>
          </reporter-output>
        </test-method> <!-- TheaterIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:32:04 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:32:05 EDT" duration-ms="747" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TheaterIconHover status=SUCCESS method=TestDropDownMenu.TheaterIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Theater Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:32:05 EDT" name="setUp" finished-at="2020-03-10T23:32:13 EDT" duration-ms="8334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:32:13 EDT" name="startExtent" finished-at="2020-03-10T23:32:13 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.ThousandBestIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="ThousandBestIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:32:13 EDT" name="ThousandBestIconHover" finished-at="2020-03-10T23:32:13 EDT" duration-ms="118" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Thousand Best Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Thousand Best]]>
            </line>
          </reporter-output>
        </test-method> <!-- ThousandBestIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:32:13 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:32:14 EDT" duration-ms="743" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ThousandBestIconHover status=SUCCESS method=TestDropDownMenu.ThousandBestIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Thousand Best Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:32:14 EDT" name="setUp" finished-at="2020-03-10T23:32:25 EDT" duration-ms="10947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:32:25 EDT" name="startExtent" finished-at="2020-03-10T23:32:25 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.TravelIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="TravelIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:32:25 EDT" name="TravelIconHover" finished-at="2020-03-10T23:32:25 EDT" duration-ms="124" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Travel Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Travel]]>
            </line>
          </reporter-output>
        </test-method> <!-- TravelIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:32:25 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:32:27 EDT" duration-ms="1420" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TravelIconHover status=SUCCESS method=TestDropDownMenu.TravelIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Travel Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:32:27 EDT" name="setUp" finished-at="2020-03-10T23:32:35 EDT" duration-ms="8820" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="WeddingsIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:32:35 EDT" name="WeddingsIconHover" finished-at="2020-03-10T23:32:35 EDT" duration-ms="117" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDownMenu: Weddings Icon Hover]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu2: hover On Weddings]]>
            </line>
          </reporter-output>
        </test-method> <!-- WeddingsIconHover -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:32:35 EDT" name="startExtent" finished-at="2020-03-10T23:32:35 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDownMenu.WeddingsIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:32:35 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:32:37 EDT" duration-ms="1170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WeddingsIconHover status=SUCCESS method=TestDropDownMenu.WeddingsIconHover()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890] output=TestDropDownMenu: Weddings Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testdropdownmenu.TestDropDownMenu@16610890]" started-at="2020-03-10T23:32:37 EDT" name="cleanUp" finished-at="2020-03-10T23:32:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testdropdownmenu.TestDropDownMenu -->
      <class name="testhomepage.HomepageTest2">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:03:41 EDT" name="setUp" finished-at="2020-03-10T23:03:50 EDT" duration-ms="9635" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:03:50 EDT" name="startExtent" finished-at="2020-03-10T23:03:50 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhomepage.HomepageTest2.burgerIconHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="burgerIconHover()[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:03:50 EDT" name="burgerIconHover" finished-at="2020-03-10T23:03:50 EDT" duration-ms="33" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[HomepageTest2: burger Icon Hover]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: hover On Burger Icon]]>
            </line>
          </reporter-output>
        </test-method> <!-- burgerIconHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:03:50 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:03:51 EDT" duration-ms="1279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=burgerIconHover status=SUCCESS method=HomepageTest2.burgerIconHover()[pri:0, instance:testhomepage.HomepageTest2@505fc5a4] output=HomepageTest2: burger Icon Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:03:51 EDT" name="setUp" finished-at="2020-03-10T23:04:01 EDT" duration-ms="9305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:01 EDT" name="startExtent" finished-at="2020-03-10T23:04:01 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhomepage.HomepageTest2.grubStreetHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="grubStreetHover()[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:01 EDT" name="grubStreetHover" finished-at="2020-03-10T23:04:01 EDT" duration-ms="19" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[HomepageTest2: grub Street Hover]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: hover On Grub Street Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- grubStreetHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:01 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:04:02 EDT" duration-ms="690" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grubStreetHover status=SUCCESS method=HomepageTest2.grubStreetHover()[pri:0, instance:testhomepage.HomepageTest2@505fc5a4] output=HomepageTest2: grub Street Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:02 EDT" name="setUp" finished-at="2020-03-10T23:04:11 EDT" duration-ms="9855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:11 EDT" name="startExtent" finished-at="2020-03-10T23:04:11 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhomepage.HomepageTest2.intelligencerHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="intelligencerHover()[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:11 EDT" name="intelligencerHover" finished-at="2020-03-10T23:04:11 EDT" duration-ms="81" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[HomepageTest2: intelligencer Hover]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: hover On Intelligencer Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- intelligencerHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:11 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:04:12 EDT" duration-ms="706" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=intelligencerHover status=SUCCESS method=HomepageTest2.intelligencerHover()[pri:0, instance:testhomepage.HomepageTest2@505fc5a4] output=HomepageTest2: intelligencer Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:12 EDT" name="setUp" finished-at="2020-03-10T23:04:22 EDT" duration-ms="9713" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="strategistHover()[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:22 EDT" name="strategistHover" finished-at="2020-03-10T23:04:22 EDT" duration-ms="24" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[HomepageTest2: strategist Hover]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: hover On Strategist Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- strategistHover -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:22 EDT" name="startExtent" finished-at="2020-03-10T23:04:22 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhomepage.HomepageTest2.strategistHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:22 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:04:23 EDT" duration-ms="1181" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=strategistHover status=SUCCESS method=HomepageTest2.strategistHover()[pri:0, instance:testhomepage.HomepageTest2@505fc5a4] output=HomepageTest2: strategist Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:23 EDT" name="setUp" finished-at="2020-03-10T23:04:33 EDT" duration-ms="9981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:33 EDT" name="startExtent" finished-at="2020-03-10T23:04:33 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhomepage.HomepageTest2.theCutHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="theCutHover()[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:33 EDT" name="theCutHover" finished-at="2020-03-10T23:04:33 EDT" duration-ms="27" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[HomepageTest2: the Cut Hover]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: hover On The Cut Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- theCutHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:33 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:04:35 EDT" duration-ms="1593" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=theCutHover status=SUCCESS method=HomepageTest2.theCutHover()[pri:0, instance:testhomepage.HomepageTest2@505fc5a4] output=HomepageTest2: the Cut Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:35 EDT" name="setUp" finished-at="2020-03-10T23:04:43 EDT" duration-ms="8823" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:43 EDT" name="startExtent" finished-at="2020-03-10T23:04:43 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhomepage.HomepageTest2.vultureHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="vultureHover()[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:43 EDT" name="vultureHover" finished-at="2020-03-10T23:04:44 EDT" duration-ms="28" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[HomepageTest2: vulture Hover]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: hover On Vulture Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- vultureHover -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:44 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:04:44 EDT" duration-ms="715" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vultureHover status=SUCCESS method=HomepageTest2.vultureHover()[pri:0, instance:testhomepage.HomepageTest2@505fc5a4] output=HomepageTest2: vulture Hover]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhomepage.HomepageTest2@505fc5a4]" started-at="2020-03-10T23:04:44 EDT" name="cleanUp" finished-at="2020-03-10T23:04:44 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testhomepage.HomepageTest2 -->
      <class name="testdropdownmenu.DropDownMenuTest">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:06:20 EDT" name="setUp" finished-at="2020-03-10T23:06:28 EDT" duration-ms="7847" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:06:28 EDT" name="startExtent" finished-at="2020-03-10T23:06:28 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.DropDownMenuTest.testClickOnBusiness()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnBusiness()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:06:28 EDT" name="testClickOnBusiness" finished-at="2020-03-10T23:06:41 EDT" duration-ms="12938" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[DropDownMenuTest: test Click On Business]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Business]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnBusiness -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:06:41 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:06:42 EDT" duration-ms="735" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnBusiness status=SUCCESS method=DropDownMenuTest.testClickOnBusiness()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e] output=DropDownMenuTest: test Click On Business]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:06:42 EDT" name="setUp" finished-at="2020-03-10T23:06:52 EDT" duration-ms="9865" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:06:52 EDT" name="startExtent" finished-at="2020-03-10T23:06:52 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.DropDownMenuTest.testClickOnIdeas()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnIdeas()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:06:52 EDT" name="testClickOnIdeas" finished-at="2020-03-10T23:07:04 EDT" duration-ms="12302" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[DropDownMenuTest: test Click On Ideas]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Ideas]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnIdeas -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:07:04 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:07:05 EDT" duration-ms="733" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnIdeas status=SUCCESS method=DropDownMenuTest.testClickOnIdeas()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e] output=DropDownMenuTest: test Click On Ideas]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:07:05 EDT" name="setUp" finished-at="2020-03-10T23:07:16 EDT" duration-ms="10715" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:07:16 EDT" name="startExtent" finished-at="2020-03-10T23:07:16 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.DropDownMenuTest.testClickOnIntelligencer()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnIntelligencer()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:07:16 EDT" name="testClickOnIntelligencer" finished-at="2020-03-10T23:07:28 EDT" duration-ms="12061" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[DropDownMenuTest: test Click On Intelligencer]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Intelligencer]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnIntelligencer -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:07:28 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:07:29 EDT" duration-ms="886" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnIntelligencer status=SUCCESS method=DropDownMenuTest.testClickOnIntelligencer()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e] output=DropDownMenuTest: test Click On Intelligencer]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:07:29 EDT" name="setUp" finished-at="2020-03-10T23:07:38 EDT" duration-ms="8998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:07:38 EDT" name="startExtent" finished-at="2020-03-10T23:07:38 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.DropDownMenuTest.testClickOnPolitics()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnPolitics()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:07:38 EDT" name="testClickOnPolitics" finished-at="2020-03-10T23:07:50 EDT" duration-ms="12722" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[DropDownMenuTest: test Click On Politics]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Politics]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnPolitics -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:07:50 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:07:51 EDT" duration-ms="785" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnPolitics status=SUCCESS method=DropDownMenuTest.testClickOnPolitics()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e] output=DropDownMenuTest: test Click On Politics]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:07:51 EDT" name="setUp" finished-at="2020-03-10T23:08:02 EDT" duration-ms="10883" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnTechnology()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:02 EDT" name="testClickOnTechnology" finished-at="2020-03-10T23:08:14 EDT" duration-ms="12372" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[DropDownMenuTest: test Click On Technology]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Technology]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnTechnology -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:02 EDT" name="startExtent" finished-at="2020-03-10T23:08:02 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.DropDownMenuTest.testClickOnTechnology()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:14 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:08:15 EDT" duration-ms="720" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnTechnology status=SUCCESS method=DropDownMenuTest.testClickOnTechnology()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e] output=DropDownMenuTest: test Click On Technology]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:15 EDT" name="setUp" finished-at="2020-03-10T23:08:24 EDT" duration-ms="9121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetTextFromDropDownMenu()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:24 EDT" name="testGetTextFromDropDownMenu" finished-at="2020-03-10T23:08:24 EDT" duration-ms="285" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[DropDownMenuTest: test Get Text From Drop Down Menu]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Text Drop Down]]>
            </line>
          </reporter-output>
        </test-method> <!-- testGetTextFromDropDownMenu -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:24 EDT" name="startExtent" finished-at="2020-03-10T23:08:24 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.DropDownMenuTest.testGetTextFromDropDownMenu()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:24 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:08:26 EDT" duration-ms="1155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGetTextFromDropDownMenu status=SUCCESS method=DropDownMenuTest.testGetTextFromDropDownMenu()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e] output=DropDownMenuTest: test Get Text From Drop Down Menu]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:26 EDT" name="setUp" finished-at="2020-03-10T23:08:34 EDT" duration-ms="8878" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:34 EDT" name="startExtent" finished-at="2020-03-10T23:08:34 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.DropDownMenuTest.testThatSearchBarWorks()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testThatSearchBarWorks()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:34 EDT" name="testThatSearchBarWorks" finished-at="2020-03-10T23:08:35 EDT" duration-ms="429" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[DropDownMenuTest: test That Search Bar Works]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: type In Search Bar]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Search Bar Web Element]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Search]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Click On Search]]>
            </line>
          </reporter-output>
        </test-method> <!-- testThatSearchBarWorks -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:35 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:08:36 EDT" duration-ms="684" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testThatSearchBarWorks status=SUCCESS method=DropDownMenuTest.testThatSearchBarWorks()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e] output=DropDownMenuTest: test That Search Bar Works]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:36 EDT" name="setUp" finished-at="2020-03-10T23:08:45 EDT" duration-ms="8963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:45 EDT" name="startExtent" finished-at="2020-03-10T23:08:45 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.DropDownMenuTest.testThatYouCanClearSearchBar()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testThatYouCanClearSearchBar()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:45 EDT" name="testThatYouCanClearSearchBar" finished-at="2020-03-10T23:08:45 EDT" duration-ms="364" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[DropDownMenuTest: test That You Can Clear Search Bar]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: type In Search Bar]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Search Bar Web Element]]>
            </line>
          </reporter-output>
        </test-method> <!-- testThatYouCanClearSearchBar -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:45 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:08:46 EDT" duration-ms="1171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testThatYouCanClearSearchBar status=SUCCESS method=DropDownMenuTest.testThatYouCanClearSearchBar()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e] output=DropDownMenuTest: test That You Can Clear Search Bar]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:46 EDT" name="setUp" finished-at="2020-03-10T23:08:57 EDT" duration-ms="10483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:57 EDT" name="startExtent" finished-at="2020-03-10T23:08:57 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.DropDownMenuTest.testThatYouCannotSearchWithEmptyField()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testThatYouCannotSearchWithEmptyField()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:57 EDT" name="testThatYouCannotSearchWithEmptyField" finished-at="2020-03-10T23:08:57 EDT" duration-ms="732" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[DropDownMenuTest: test That You Cannot Search With Empty Field]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: type In Search Bar]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Search Bar Web Element]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Search]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Click On Search]]>
            </line>
          </reporter-output>
        </test-method> <!-- testThatYouCannotSearchWithEmptyField -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:57 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:08:59 EDT" duration-ms="1432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testThatYouCannotSearchWithEmptyField status=SUCCESS method=DropDownMenuTest.testThatYouCannotSearchWithEmptyField()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e] output=DropDownMenuTest: test That You Cannot Search With Empty Field]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testdropdownmenu.DropDownMenuTest@4efc180e]" started-at="2020-03-10T23:08:59 EDT" name="cleanUp" finished-at="2020-03-10T23:08:59 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testdropdownmenu.DropDownMenuTest -->
      <class name="testhomepage.HomepageTest">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:02:45 EDT" name="extentSetup" finished-at="2020-03-10T23:02:45 EDT" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@71ebd1d9]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report DirectoryC:\Users\maish\Desktop\Demo\Group5\NYMag\target\surefire-reports\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:02:45 EDT" name="setUp" finished-at="2020-03-10T23:02:53 EDT" duration-ms="8037" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:02:53 EDT" name="startExtent" finished-at="2020-03-10T23:02:53 EDT" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhomepage.HomepageTest.clickOnBurgerIcon()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="clickOnBurgerIcon()[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:02:53 EDT" name="clickOnBurgerIcon" finished-at="2020-03-10T23:02:54 EDT" duration-ms="222" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[HomepageTest: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: get Burger Icon]]>
            </line>
          </reporter-output>
        </test-method> <!-- clickOnBurgerIcon -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:02:54 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:02:54 EDT" duration-ms="895" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnBurgerIcon status=SUCCESS method=HomepageTest.clickOnBurgerIcon()[pri:0, instance:testhomepage.HomepageTest@3d6f0054] output=HomepageTest: click On Burger Icon]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:02:54 EDT" name="setUp" finished-at="2020-03-10T23:03:02 EDT" duration-ms="7328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:02 EDT" name="startExtent" finished-at="2020-03-10T23:03:02 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhomepage.HomepageTest.grubStreetTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="grubStreetTab()[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:02 EDT" name="grubStreetTab" finished-at="2020-03-10T23:03:02 EDT" duration-ms="243" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[HomepageTest: grub Street Tab]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: click On Grub Street Tab]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: get Grub Street Web Element]]>
            </line>
          </reporter-output>
        </test-method> <!-- grubStreetTab -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:02 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:03:03 EDT" duration-ms="769" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=grubStreetTab status=SUCCESS method=HomepageTest.grubStreetTab()[pri:0, instance:testhomepage.HomepageTest@3d6f0054] output=HomepageTest: grub Street Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:03 EDT" name="setUp" finished-at="2020-03-10T23:03:11 EDT" duration-ms="8511" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:11 EDT" name="startExtent" finished-at="2020-03-10T23:03:11 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhomepage.HomepageTest.intelligencerTabs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="intelligencerTabs()[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:11 EDT" name="intelligencerTabs" finished-at="2020-03-10T23:03:11 EDT" duration-ms="125" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[HomepageTest: intelligencer Tabs]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: click On Intelligencer Tab]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: get Intelligencer Web Element]]>
            </line>
          </reporter-output>
        </test-method> <!-- intelligencerTabs -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:11 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:03:12 EDT" duration-ms="780" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=intelligencerTabs status=SUCCESS method=HomepageTest.intelligencerTabs()[pri:0, instance:testhomepage.HomepageTest@3d6f0054] output=HomepageTest: intelligencer Tabs]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:12 EDT" name="setUp" finished-at="2020-03-10T23:03:20 EDT" duration-ms="7259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="strategistTab()[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:20 EDT" name="strategistTab" finished-at="2020-03-10T23:03:20 EDT" duration-ms="197" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[HomepageTest: strategist Tab]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: click On Strategist Tab]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: get Strategist Web Element]]>
            </line>
          </reporter-output>
        </test-method> <!-- strategistTab -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:20 EDT" name="startExtent" finished-at="2020-03-10T23:03:20 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhomepage.HomepageTest.strategistTab()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:20 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:03:20 EDT" duration-ms="694" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=strategistTab status=SUCCESS method=HomepageTest.strategistTab()[pri:0, instance:testhomepage.HomepageTest@3d6f0054] output=HomepageTest: strategist Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:20 EDT" name="setUp" finished-at="2020-03-10T23:03:29 EDT" duration-ms="8346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="theCutTabs()[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:29 EDT" name="theCutTabs" finished-at="2020-03-10T23:03:29 EDT" duration-ms="148" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[HomepageTest: the Cut Tabs]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: click On The Cut Tab]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: get The Cut Web Element]]>
            </line>
          </reporter-output>
        </test-method> <!-- theCutTabs -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:29 EDT" name="startExtent" finished-at="2020-03-10T23:03:29 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhomepage.HomepageTest.theCutTabs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:29 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:03:30 EDT" duration-ms="803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=theCutTabs status=SUCCESS method=HomepageTest.theCutTabs()[pri:0, instance:testhomepage.HomepageTest@3d6f0054] output=HomepageTest: the Cut Tabs]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:30 EDT" name="setUp" finished-at="2020-03-10T23:03:39 EDT" duration-ms="9511" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:39 EDT" name="startExtent" finished-at="2020-03-10T23:03:39 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhomepage.HomepageTest.vultureTabs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="vultureTabs()[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:39 EDT" name="vultureTabs" finished-at="2020-03-10T23:03:39 EDT" duration-ms="256" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[HomepageTest: vulture Tabs]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: click On Vulture Tab]]>
            </line>
            <line>
              <![CDATA[NYMagHomepage: get Vulture Web Element]]>
            </line>
          </reporter-output>
        </test-method> <!-- vultureTabs -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:39 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:03:41 EDT" duration-ms="1061" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vultureTabs status=SUCCESS method=HomepageTest.vultureTabs()[pri:0, instance:testhomepage.HomepageTest@3d6f0054] output=HomepageTest: vulture Tabs]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:03:41 EDT" name="cleanUp" finished-at="2020-03-10T23:03:41 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:testhomepage.HomepageTest@3d6f0054]" started-at="2020-03-10T23:35:34 EDT" name="generateReport" finished-at="2020-03-10T23:35:34 EDT" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- testhomepage.HomepageTest -->
      <class name="testdropdownmenu.TestDropDown2">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:15:46 EDT" name="setUp" finished-at="2020-03-10T23:15:54 EDT" duration-ms="8248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnBeauty()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:15:54 EDT" name="testClickOnBeauty" finished-at="2020-03-10T23:16:06 EDT" duration-ms="12085" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On Beauty]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Beauty]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnBeauty -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:15:54 EDT" name="startExtent" finished-at="2020-03-10T23:15:54 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnBeauty()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:16:06 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:16:07 EDT" duration-ms="720" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnBeauty status=SUCCESS method=TestDropDown2.testClickOnBeauty()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On Beauty]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:16:07 EDT" name="setUp" finished-at="2020-03-10T23:16:14 EDT" duration-ms="7674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:16:14 EDT" name="startExtent" finished-at="2020-03-10T23:16:14 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnCulture()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnCulture()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:16:14 EDT" name="testClickOnCulture" finished-at="2020-03-10T23:16:27 EDT" duration-ms="12885" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On Culture]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Culture]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnCulture -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:16:27 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:16:28 EDT" duration-ms="742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnCulture status=SUCCESS method=TestDropDown2.testClickOnCulture()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On Culture]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:16:28 EDT" name="setUp" finished-at="2020-03-10T23:16:39 EDT" duration-ms="10579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:16:39 EDT" name="startExtent" finished-at="2020-03-10T23:16:39 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnDesignHunting()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnDesignHunting()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:16:39 EDT" name="testClickOnDesignHunting" finished-at="2020-03-10T23:16:51 EDT" duration-ms="12364" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On Design Hunting]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Design Hunting]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnDesignHunting -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:16:51 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:16:52 EDT" duration-ms="741" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnDesignHunting status=SUCCESS method=TestDropDown2.testClickOnDesignHunting()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On Design Hunting]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:16:52 EDT" name="setUp" finished-at="2020-03-10T23:17:00 EDT" duration-ms="8543" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnDining()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:17:00 EDT" name="testClickOnDining" finished-at="2020-03-10T23:17:12 EDT" duration-ms="11959" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On Dining]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Dining]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnDining -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:17:00 EDT" name="startExtent" finished-at="2020-03-10T23:17:00 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnDining()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:17:12 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:17:13 EDT" duration-ms="712" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnDining status=SUCCESS method=TestDropDown2.testClickOnDining()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On Dining]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:17:13 EDT" name="setUp" finished-at="2020-03-10T23:17:21 EDT" duration-ms="8053" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnElectronics()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:17:21 EDT" name="testClickOnElectronics" finished-at="2020-03-10T23:17:34 EDT" duration-ms="13185" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On Electronics]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Electronics]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnElectronics -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:17:21 EDT" name="startExtent" finished-at="2020-03-10T23:17:21 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnElectronics()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:17:34 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:17:35 EDT" duration-ms="703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnElectronics status=SUCCESS method=TestDropDown2.testClickOnElectronics()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On Electronics]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:17:35 EDT" name="setUp" finished-at="2020-03-10T23:17:43 EDT" duration-ms="8171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:17:43 EDT" name="startExtent" finished-at="2020-03-10T23:17:43 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnFashion()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnFashion()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:17:43 EDT" name="testClickOnFashion" finished-at="2020-03-10T23:17:56 EDT" duration-ms="12553" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On Fashion]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Fashion]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnFashion -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:17:56 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:17:56 EDT" duration-ms="697" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnFashion status=SUCCESS method=TestDropDown2.testClickOnFashion()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On Fashion]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:17:56 EDT" name="setUp" finished-at="2020-03-10T23:18:04 EDT" duration-ms="7727" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:18:04 EDT" name="startExtent" finished-at="2020-03-10T23:18:04 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnFitness()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnFitness()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:18:04 EDT" name="testClickOnFitness" finished-at="2020-03-10T23:18:17 EDT" duration-ms="12581" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On Fitness]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Fitness]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnFitness -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:18:17 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:18:17 EDT" duration-ms="704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnFitness status=SUCCESS method=TestDropDown2.testClickOnFitness()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On Fitness]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:18:17 EDT" name="setUp" finished-at="2020-03-10T23:18:27 EDT" duration-ms="9847" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnGiftGuides()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:18:27 EDT" name="testClickOnGiftGuides" finished-at="2020-03-10T23:18:44 EDT" duration-ms="16749" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On Gift Guides]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Gift Guides]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnGiftGuides -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:18:27 EDT" name="startExtent" finished-at="2020-03-10T23:18:27 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnGiftGuides()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:18:44 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:18:45 EDT" duration-ms="1278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnGiftGuides status=SUCCESS method=TestDropDown2.testClickOnGiftGuides()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On Gift Guides]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:18:45 EDT" name="setUp" finished-at="2020-03-10T23:19:00 EDT" duration-ms="14569" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:19:00 EDT" name="startExtent" finished-at="2020-03-10T23:19:00 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnHome()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnHome()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:19:00 EDT" name="testClickOnHome" finished-at="2020-03-10T23:19:12 EDT" duration-ms="12188" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On Home]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Home]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnHome -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:19:12 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:19:13 EDT" duration-ms="786" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnHome status=SUCCESS method=TestDropDown2.testClickOnHome()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On Home]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:19:13 EDT" name="setUp" finished-at="2020-03-10T23:19:20 EDT" duration-ms="7757" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:19:20 EDT" name="startExtent" finished-at="2020-03-10T23:19:20 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnKids()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnKids()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:19:20 EDT" name="testClickOnKids" finished-at="2020-03-10T23:19:36 EDT" duration-ms="15261" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On Kids]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Kids]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnKids -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:19:36 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:19:37 EDT" duration-ms="1630" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnKids status=SUCCESS method=TestDropDown2.testClickOnKids()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On Kids]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:19:37 EDT" name="setUp" finished-at="2020-03-10T23:19:45 EDT" duration-ms="7539" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:19:45 EDT" name="startExtent" finished-at="2020-03-10T23:19:45 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnPower()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnPower()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:19:45 EDT" name="testClickOnPower" finished-at="2020-03-10T23:19:58 EDT" duration-ms="12872" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On Power]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Power]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnPower -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:19:58 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:19:59 EDT" duration-ms="743" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnPower status=SUCCESS method=TestDropDown2.testClickOnPower()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On Power]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:19:59 EDT" name="setUp" finished-at="2020-03-10T23:20:06 EDT" duration-ms="7480" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:20:06 EDT" name="startExtent" finished-at="2020-03-10T23:20:06 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnRestaurantsAndBars()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnRestaurantsAndBars()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:20:06 EDT" name="testClickOnRestaurantsAndBars" finished-at="2020-03-10T23:20:18 EDT" duration-ms="12326" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On Restaurants And Bars]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Restaurants And Bars]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnRestaurantsAndBars -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:20:18 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:20:19 EDT" duration-ms="943" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnRestaurantsAndBars status=SUCCESS method=TestDropDown2.testClickOnRestaurantsAndBars()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On Restaurants And Bars]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:20:19 EDT" name="setUp" finished-at="2020-03-10T23:20:27 EDT" duration-ms="7539" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnSales()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:20:27 EDT" name="testClickOnSales" finished-at="2020-03-10T23:20:39 EDT" duration-ms="12491" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On Sales]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Sales]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnSales -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:20:27 EDT" name="startExtent" finished-at="2020-03-10T23:20:27 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnSales()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:20:39 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:20:40 EDT" duration-ms="742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnSales status=SUCCESS method=TestDropDown2.testClickOnSales()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On Sales]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:20:40 EDT" name="setUp" finished-at="2020-03-10T23:20:49 EDT" duration-ms="8501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnTV()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:20:49 EDT" name="testClickOnTV" finished-at="2020-03-10T23:21:01 EDT" duration-ms="12849" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On TV]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On TV]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnTV -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:20:49 EDT" name="startExtent" finished-at="2020-03-10T23:20:49 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnTV()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:21:01 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:21:02 EDT" duration-ms="741" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnTV status=SUCCESS method=TestDropDown2.testClickOnTV()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On TV]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:21:02 EDT" name="setUp" finished-at="2020-03-10T23:21:11 EDT" duration-ms="8398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:21:11 EDT" name="startExtent" finished-at="2020-03-10T23:21:11 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnThousandBest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnThousandBest()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:21:11 EDT" name="testClickOnThousandBest" finished-at="2020-03-10T23:21:23 EDT" duration-ms="12300" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On Thousand Best]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Thousand Best]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnThousandBest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:21:23 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:21:24 EDT" duration-ms="698" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnThousandBest status=SUCCESS method=TestDropDown2.testClickOnThousandBest()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On Thousand Best]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:21:24 EDT" name="setUp" finished-at="2020-03-10T23:21:33 EDT" duration-ms="9314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:21:33 EDT" name="startExtent" finished-at="2020-03-10T23:21:33 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnTravel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnTravel()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:21:33 EDT" name="testClickOnTravel" finished-at="2020-03-10T23:21:48 EDT" duration-ms="14733" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On Travel]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Travel]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnTravel -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:21:48 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:21:48 EDT" duration-ms="780" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnTravel status=SUCCESS method=TestDropDown2.testClickOnTravel()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On Travel]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:21:48 EDT" name="setUp" finished-at="2020-03-10T23:21:59 EDT" duration-ms="10310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:21:59 EDT" name="startExtent" finished-at="2020-03-10T23:21:59 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown2.testClickOnWeddings()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnWeddings()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:21:59 EDT" name="testClickOnWeddings" finished-at="2020-03-10T23:22:10 EDT" duration-ms="11591" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown2: test Click On Weddings]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Weddings]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnWeddings -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:22:10 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:22:11 EDT" duration-ms="708" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnWeddings status=SUCCESS method=TestDropDown2.testClickOnWeddings()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e] output=TestDropDown2: test Click On Weddings]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testdropdownmenu.TestDropDown2@25084a1e]" started-at="2020-03-10T23:22:11 EDT" name="cleanUp" finished-at="2020-03-10T23:22:11 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testdropdownmenu.TestDropDown2 -->
      <class name="testdropdownmenu.TestDropDown">
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:08:59 EDT" name="setUp" finished-at="2020-03-10T23:09:10 EDT" duration-ms="11405" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:09:10 EDT" name="startExtent" finished-at="2020-03-10T23:09:10 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnArt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnArt()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:09:10 EDT" name="testClickOnArt" finished-at="2020-03-10T23:09:22 EDT" duration-ms="12125" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Art]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Art]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnArt -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:09:22 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:09:23 EDT" duration-ms="734" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnArt status=SUCCESS method=TestDropDown.testClickOnArt()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Art]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:09:23 EDT" name="setUp" finished-at="2020-03-10T23:09:34 EDT" duration-ms="11171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:09:34 EDT" name="startExtent" finished-at="2020-03-10T23:09:34 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnBooks()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnBooks()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:09:34 EDT" name="testClickOnBooks" finished-at="2020-03-10T23:09:48 EDT" duration-ms="14296" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Books]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Books]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnBooks -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:09:48 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:09:49 EDT" duration-ms="696" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnBooks status=SUCCESS method=TestDropDown.testClickOnBooks()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Books]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:09:49 EDT" name="setUp" finished-at="2020-03-10T23:10:00 EDT" duration-ms="11269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnComedy()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:10:00 EDT" name="testClickOnComedy" finished-at="2020-03-10T23:10:13 EDT" duration-ms="13032" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Comedy]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Comedy]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnComedy -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:10:00 EDT" name="startExtent" finished-at="2020-03-10T23:10:00 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnComedy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:10:13 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:10:14 EDT" duration-ms="740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnComedy status=SUCCESS method=TestDropDown.testClickOnComedy()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Comedy]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:10:14 EDT" name="setUp" finished-at="2020-03-10T23:10:23 EDT" duration-ms="8806" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:10:23 EDT" name="startExtent" finished-at="2020-03-10T23:10:23 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnCulture()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnCulture()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:10:23 EDT" name="testClickOnCulture" finished-at="2020-03-10T23:10:36 EDT" duration-ms="12465" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Culture]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Culture]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnCulture -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:10:36 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:10:36 EDT" duration-ms="725" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnCulture status=SUCCESS method=TestDropDown.testClickOnCulture()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Culture]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:10:36 EDT" name="setUp" finished-at="2020-03-10T23:10:45 EDT" duration-ms="8979" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:10:45 EDT" name="startExtent" finished-at="2020-03-10T23:10:45 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnDesignHunting()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnDesignHunting()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:10:45 EDT" name="testClickOnDesignHunting" finished-at="2020-03-10T23:10:57 EDT" duration-ms="12265" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Design Hunting]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Design Hunting]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnDesignHunting -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:10:57 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:10:58 EDT" duration-ms="905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnDesignHunting status=SUCCESS method=TestDropDown.testClickOnDesignHunting()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Design Hunting]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:10:58 EDT" name="setUp" finished-at="2020-03-10T23:11:08 EDT" duration-ms="10098" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnElectronics()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:11:08 EDT" name="testClickOnElectronics" finished-at="2020-03-10T23:11:20 EDT" duration-ms="11783" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Electronics]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Electronics]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnElectronics -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:11:08 EDT" name="startExtent" finished-at="2020-03-10T23:11:08 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnElectronics()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:11:20 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:11:21 EDT" duration-ms="696" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnElectronics status=SUCCESS method=TestDropDown.testClickOnElectronics()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Electronics]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:11:21 EDT" name="setUp" finished-at="2020-03-10T23:11:30 EDT" duration-ms="8566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:11:30 EDT" name="startExtent" finished-at="2020-03-10T23:11:30 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnFitness()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnFitness()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:11:30 EDT" name="testClickOnFitness" finished-at="2020-03-10T23:11:42 EDT" duration-ms="12931" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Fitness]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Fitness]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnFitness -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:11:42 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:11:43 EDT" duration-ms="716" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnFitness status=SUCCESS method=TestDropDown.testClickOnFitness()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Fitness]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:11:43 EDT" name="setUp" finished-at="2020-03-10T23:11:53 EDT" duration-ms="9624" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:11:53 EDT" name="startExtent" finished-at="2020-03-10T23:11:53 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnKids()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnKids()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:11:53 EDT" name="testClickOnKids" finished-at="2020-03-10T23:12:05 EDT" duration-ms="12160" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Kids]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Kids]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnKids -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:12:05 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:12:06 EDT" duration-ms="708" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnKids status=SUCCESS method=TestDropDown.testClickOnKids()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Kids]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:12:06 EDT" name="setUp" finished-at="2020-03-10T23:12:16 EDT" duration-ms="10378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:12:16 EDT" name="startExtent" finished-at="2020-03-10T23:12:16 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnMovies()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnMovies()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:12:16 EDT" name="testClickOnMovies" finished-at="2020-03-10T23:12:29 EDT" duration-ms="12732" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Movies]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Movies]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnMovies -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:12:29 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:12:29 EDT" duration-ms="709" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnMovies status=SUCCESS method=TestDropDown.testClickOnMovies()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Movies]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:12:29 EDT" name="setUp" finished-at="2020-03-10T23:12:38 EDT" duration-ms="8014" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnMusic()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:12:38 EDT" name="testClickOnMusic" finished-at="2020-03-10T23:12:50 EDT" duration-ms="12196" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Music]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Music]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnMusic -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:12:38 EDT" name="startExtent" finished-at="2020-03-10T23:12:38 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnMusic()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:12:50 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:12:50 EDT" duration-ms="711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnMusic status=SUCCESS method=TestDropDown.testClickOnMusic()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Music]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:12:50 EDT" name="setUp" finished-at="2020-03-10T23:13:02 EDT" duration-ms="11791" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:13:02 EDT" name="startExtent" finished-at="2020-03-10T23:13:02 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnPower()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnPower()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:13:02 EDT" name="testClickOnPower" finished-at="2020-03-10T23:13:15 EDT" duration-ms="12404" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Power]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Power]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnPower -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:13:15 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:13:15 EDT" duration-ms="695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnPower status=SUCCESS method=TestDropDown.testClickOnPower()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Power]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:13:15 EDT" name="setUp" finished-at="2020-03-10T23:13:23 EDT" duration-ms="7341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnSelf()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:13:23 EDT" name="testClickOnSelf" finished-at="2020-03-10T23:13:35 EDT" duration-ms="12354" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Self]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Self]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnSelf -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:13:23 EDT" name="startExtent" finished-at="2020-03-10T23:13:23 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnSelf()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:13:35 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:13:36 EDT" duration-ms="756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnSelf status=SUCCESS method=TestDropDown.testClickOnSelf()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Self]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:13:36 EDT" name="setUp" finished-at="2020-03-10T23:13:44 EDT" duration-ms="8095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:13:44 EDT" name="startExtent" finished-at="2020-03-10T23:13:44 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnStream()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnStream()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:13:44 EDT" name="testClickOnStream" finished-at="2020-03-10T23:13:56 EDT" duration-ms="12196" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Stream]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Stream]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnStream -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:13:56 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:13:57 EDT" duration-ms="733" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnStream status=SUCCESS method=TestDropDown.testClickOnStream()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Stream]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:13:57 EDT" name="setUp" finished-at="2020-03-10T23:14:08 EDT" duration-ms="11446" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:14:08 EDT" name="startExtent" finished-at="2020-03-10T23:14:08 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnStyle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnStyle()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:14:08 EDT" name="testClickOnStyle" finished-at="2020-03-10T23:14:21 EDT" duration-ms="12666" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Style]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Style]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnStyle -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:14:21 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:14:22 EDT" duration-ms="704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnStyle status=SUCCESS method=TestDropDown.testClickOnStyle()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Style]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:14:22 EDT" name="setUp" finished-at="2020-03-10T23:14:30 EDT" duration-ms="8139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:14:30 EDT" name="startExtent" finished-at="2020-03-10T23:14:30 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnTV()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnTV()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:14:30 EDT" name="testClickOnTV" finished-at="2020-03-10T23:14:42 EDT" duration-ms="12362" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On TV]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On TV]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnTV -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:14:42 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:14:43 EDT" duration-ms="707" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnTV status=SUCCESS method=TestDropDown.testClickOnTV()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On TV]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:14:43 EDT" name="setUp" finished-at="2020-03-10T23:14:51 EDT" duration-ms="7821" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClickOnTheater()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:14:51 EDT" name="testClickOnTheater" finished-at="2020-03-10T23:15:02 EDT" duration-ms="11043" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Theater]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Theater]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnTheater -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:14:51 EDT" name="startExtent" finished-at="2020-03-10T23:14:51 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnTheater()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:15:02 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:15:02 EDT" duration-ms="693" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnTheater status=SUCCESS method=TestDropDown.testClickOnTheater()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Theater]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:15:02 EDT" name="setUp" finished-at="2020-03-10T23:15:10 EDT" duration-ms="7202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:15:10 EDT" name="startExtent" finished-at="2020-03-10T23:15:10 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnTravel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnTravel()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:15:10 EDT" name="testClickOnTravel" finished-at="2020-03-10T23:15:23 EDT" duration-ms="13248" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Travel]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Travel]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnTravel -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:15:23 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:15:24 EDT" duration-ms="693" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnTravel status=SUCCESS method=TestDropDown.testClickOnTravel()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Travel]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:15:24 EDT" name="setUp" finished-at="2020-03-10T23:15:34 EDT" duration-ms="10317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.nymag.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:15:34 EDT" name="startExtent" finished-at="2020-03-10T23:15:34 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testdropdownmenu.TestDropDown.testClickOnWeddings()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="testClickOnWeddings()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:15:34 EDT" name="testClickOnWeddings" finished-at="2020-03-10T23:15:45 EDT" duration-ms="11125" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestDropDown: test Click On Weddings]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: get Burger Icon]]>
            </line>
            <line>
              <![CDATA[DropDownMenu: click On Weddings]]>
            </line>
          </reporter-output>
        </test-method> <!-- testClickOnWeddings -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:15:45 EDT" name="afterEachTestMethod" finished-at="2020-03-10T23:15:46 EDT" duration-ms="711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnWeddings status=SUCCESS method=TestDropDown.testClickOnWeddings()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25] output=TestDropDown: test Click On Weddings]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testdropdownmenu.TestDropDown@bd4dc25]" started-at="2020-03-10T23:15:46 EDT" name="cleanUp" finished-at="2020-03-10T23:15:46 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testdropdownmenu.TestDropDown -->
    </test> <!-- NYMag Home -->
  </suite> <!-- NYMag Automation Script  -->
</testng-results>
